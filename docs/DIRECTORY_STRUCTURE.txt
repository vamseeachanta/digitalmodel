# Marine Engineering Module - Directory Structure
# Generated: October 3, 2025
# Version: 2.1.0

## Production Code Structure
src/digitalmodel/modules/marine_analysis/
├── __init__.py (v2.1.0 - Main module with submodule exports)
├── __main__.py (CLI entry point)
│
├── profiling/          # Performance profiling and optimization
│   ├── __init__.py
│   ├── profile_modules.py
│   ├── performance_charts.py
│   ├── optimization_report.py
│   └── run_analysis.py
│
├── extraction/         # Data extraction from various sources
│   ├── __init__.py
│   ├── extract_ocimf.py
│   ├── extract_hydro.py
│   ├── extract_mooring.py
│   └── run_extraction.py
│
├── validation/         # Validation and verification tools
│   ├── __init__.py
│   ├── validate_phase2.py
│   └── validate_catenary.py
│
├── visualization/      # Visualization and charting tools
│   ├── __init__.py
│   ├── integration_charts.py
│   ├── ocimf_charts.py
│   └── RAOPlotter (existing)
│
└── analysis/          # General analysis utilities
    ├── __init__.py
    ├── excel_analyzer.py
    └── hydro_usage_example.py

## Test Output Structure
tests/outputs/
├── phase2/
│   ├── ocimf/              # OCIMF wind/current coefficient outputs
│   │   ├── 3d_cmc.png
│   │   ├── 3d_cmw.png
│   │   ├── 3d_cxc.png
│   │   ├── 3d_cxw.png
│   │   ├── 3d_cyc.png
│   │   ├── 3d_cyw.png
│   │   ├── heading_sensitivity.png
│   │   ├── heatmaps.png
│   │   ├── polar_diagrams.png
│   │   └── vector_field.png
│   │
│   ├── hydro/             # Hydrodynamic analysis outputs
│   │   ├── added_mass_heatmap_*.png
│   │   ├── damping_heatmap_*.png
│   │   ├── frequency_response_curves.png
│   │   ├── natural_periods.png
│   │   ├── critical_damping_ratios.png
│   │   └── coupling_network.png
│   │
│   └── validation/        # Validation test outputs
│       ├── html/
│       ├── csv/
│       ├── png/
│       └── temp_hydro/
│
└── phase3/
    ├── integration/       # System integration outputs
    │   ├── data/
    │   ├── html/
    │   ├── pdf/
    │   │   └── 01_system_architecture.pdf
    │   └── png/
    │       └── 01_system_architecture.png
    │
    └── performance/       # Performance analysis outputs
        ├── 01_runtime_comparison.png
        ├── 02_memory_usage.png
        ├── 03_performance_ratio.png
        ├── 04_module_summary.png
        ├── 05_scaling_analysis.png
        ├── 06_performance_heatmap.png
        ├── 07_target_achievement.png
        └── 08_bottleneck_analysis.png

## Specification Documentation Structure
specs/outputs/
└── marine-engineering/
    ├── analysis-reports/
    ├── extraction-reports/
    └── validation-dashboards/

## Documentation Files
docs/
├── MIGRATION_GUIDE.md          # Comprehensive migration instructions
├── REORGANIZATION_SUMMARY.md   # Summary of reorganization
└── DIRECTORY_STRUCTURE.txt     # This file

## Test Files
tests/
└── test_module_reorganization.py   # 29 test cases for verification

## Statistics
- Production Python files: 43 files
- Test output files: 46 files
- __init__.py files: 6 files
- Documentation files: 3 major documents
- Submodules: 5 (profiling, extraction, validation, visualization, analysis)
- CLI commands: 5 main commands
- Test cases: 29 verification tests

## Key Files
1. src/digitalmodel/modules/marine_analysis/__init__.py - Main module entry point
2. src/digitalmodel/modules/marine_analysis/__main__.py - CLI interface
3. src/digitalmodel/modules/__init__.py - Package declaration
4. docs/MIGRATION_GUIDE.md - User migration instructions
5. docs/REORGANIZATION_SUMMARY.md - Complete reorganization summary
6. tests/test_module_reorganization.py - Verification test suite

## CLI Usage Examples
# Profile performance
python -m digitalmodel.modules.marine_analysis profile --module wave_spectra

# Extract OCIMF data
python -m digitalmodel.modules.marine_analysis extract --type ocimf --input db.xlsx

# Run validation
python -m digitalmodel.modules.marine_analysis validate --phase 2

# Generate visualizations
python -m digitalmodel.modules.marine_analysis visualize --type integration --input data/

# Analyze Excel file
python -m digitalmodel.modules.marine_analysis analyze --input vessel_data.xlsx

## Import Examples
# Import profiling module
from digitalmodel.modules.marine_analysis.profiling import profile_modules

# Import extraction module
from digitalmodel.modules.marine_analysis.extraction import extract_ocimf

# Import validation module
from digitalmodel.modules.marine_analysis.validation import validate_phase2

# Import all submodules
from digitalmodel.modules.marine_analysis import (
    profiling, extraction, validation, viz_tools, analysis
)

## Version History
- v2.0.0: Initial RAO unified reader implementation
- v2.1.0: Module reorganization with submodules (October 2025)

---
Last Updated: October 3, 2025
Status: Complete ✅
