# OrcaWave MCP Server Configuration
# This configuration file controls the behavior of the OrcaWave MCP server

server:
  name: "orcawave-mcp-server"
  version: "1.0.0"
  description: "MCP server for OrcaWave hydrodynamic analysis"
  host: "localhost"
  port: 3100

orcawave:
  # Path to OrcaWave installation
  installation_path: "C:/Program Files/Orcina/OrcaWave"
  
  # COM connection timeout in milliseconds
  com_timeout: 30000
  
  # Automatically connect to OrcaWave on server startup
  auto_connect: false  # Set to true when OrcaWave is installed
  
  # License server configuration
  license_server: "localhost:5053"

analysis:
  # Default analysis type (diffraction, radiation, both)
  default_type: "diffraction"
  
  # Convergence criteria
  convergence_tolerance: 0.01
  max_iterations: 100
  
  # Enable parallel frequency processing
  parallel_frequencies: true
  
  # Default frequency range
  default_frequencies:
    start: 0.1    # rad/s
    end: 2.0      # rad/s
    steps: 50
  
  # Default wave directions (degrees)
  default_directions: [0, 45, 90, 135, 180, 225, 270, 315]
  
  # Default water depth (meters)
  default_water_depth: 200.0

mesh:
  # Target mesh quality score (0-1)
  target_quality: 0.85
  
  # Maximum aspect ratio for panels
  max_aspect_ratio: 3.0
  
  # Waterline refinement factor
  waterline_refinement: 2.0
  
  # Automatically optimize mesh before analysis
  auto_optimize: true
  
  # Panel count targets by vessel size
  panel_targets:
    small: 1000    # < 50m
    medium: 2500   # 50-150m
    large: 5000    # > 150m

integration:
  orcaflex:
    # Export format for OrcaFlex
    export_format: "vessel_type"
    
    # Include QTF data in export
    include_qtf: true
    
    # Use compact format for smaller files
    compact_format: false
    
    # Default output directory
    output_directory: "./results/orcaflex"
  
  excel:
    # Excel report template
    template: "templates/hydro_report.xlsx"
    
    # Automatically generate charts
    auto_charts: true
    
    # Output directory for reports
    output_directory: "./results/excel"
  
  aqwa:
    # AQWA benchmark database
    benchmark_database: "benchmarks/aqwa_cases.db"
    
    # Tolerance for benchmark comparison
    tolerance: 0.05
    
    # Include in validation reports
    include_in_validation: true

performance:
  # Cache analysis results
  cache_results: true
  
  # Cache time-to-live in seconds
  cache_ttl: 3600
  
  # Maximum parallel analyses
  max_parallel_analyses: 3
  
  # Enable GPU acceleration (if available)
  gpu_acceleration: false
  
  # Memory limit for analysis (MB)
  memory_limit: 4096

validation:
  # Check reciprocity relations
  reciprocity_check: true
  reciprocity_tolerance: 0.01
  
  # Check energy conservation
  energy_check: true
  energy_tolerance: 0.01
  
  # Check asymptotic behavior
  asymptotic_check: true
  
  # Compare with benchmark cases
  benchmark_comparison: true
  
  # Generate validation report
  generate_report: true
  report_format: "html"  # html, pdf, markdown

monitoring:
  # Screenshot interval in seconds (for progress monitoring)
  screenshot_interval: 5
  
  # Enable progress tracking
  progress_tracking: true
  
  # Capture screenshots on errors
  error_screenshots: true
  
  # Enable visual validation
  visual_validation: false  # Set to true when vision API is configured
  
  # Log level (DEBUG, INFO, WARNING, ERROR)
  log_level: "INFO"
  
  # Log file location
  log_file: "logs/orcawave_mcp.log"

# Environment-specific overrides
environments:
  development:
    server:
      host: "127.0.0.1"
      port: 3101
    orcawave:
      auto_connect: false
    monitoring:
      log_level: "DEBUG"
      visual_validation: false
  
  testing:
    server:
      port: 3102
    mesh:
      auto_optimize: false
    validation:
      generate_report: false
  
  production:
    server:
      host: "0.0.0.0"
    orcawave:
      auto_connect: true
    performance:
      max_parallel_analyses: 5
    monitoring:
      log_level: "WARNING"
      visual_validation: true

# Vessel templates for quick setup
vessel_templates:
  fpso:
    type: "FPSO"
    dimensions:
      length: 300.0
      beam: 60.0
      draft: 20.0
    mesh:
      target_panels: 4000
      waterline_refinement: 2.5
  
  semi_submersible:
    type: "SEMI_SUBMERSIBLE"
    dimensions:
      length: 120.0
      beam: 80.0
      draft: 25.0
    mesh:
      target_panels: 3500
      waterline_refinement: 2.0
  
  ship:
    type: "SHIP"
    dimensions:
      length: 200.0
      beam: 32.0
      draft: 12.0
    mesh:
      target_panels: 3000
      waterline_refinement: 2.0