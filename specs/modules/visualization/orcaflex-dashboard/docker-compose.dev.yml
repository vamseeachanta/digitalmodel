version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: orcaflex-db
    environment:
      POSTGRES_DB: orcaflex_dashboard
      POSTGRES_USER: orcaflex
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orcaflex"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: orcaflex-cache
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: python:3.11-slim
    container_name: orcaflex-backend
    working_dir: /app
    environment:
      DATABASE_URL: postgresql+asyncpg://orcaflex:${DB_PASSWORD:-changeme}@postgres:5432/orcaflex_dashboard
      REDIS_URL: redis://redis:6379
      CORS_ORIGINS: ${CORS_ORIGINS:-http://localhost:3000}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
      ENVIRONMENT: ${ENVIRONMENT:-development}
      PYTHONUNBUFFERED: 1
    volumes:
      - ./src/backend:/app
      - ./pyproject.toml:/app/pyproject.toml
      - ./data:/data:ro
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
      apt-get update && apt-get install -y gcc g++ &&
      pip install --no-cache-dir fastapi uvicorn[standard] sqlalchemy alembic asyncpg redis pandas numpy scipy matplotlib plotly python-dotenv aiofiles httpx python-multipart jinja2 pydantic pydantic-settings &&
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    image: node:18-alpine
    container_name: orcaflex-frontend
    working_dir: /app
    environment:
      REACT_APP_API_URL: ${API_URL:-http://localhost:8000}
      REACT_APP_WS_URL: ${WS_URL:-ws://localhost:8000}
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: >
      sh -c "
      npm install &&
      npm run dev || npm start
      "

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: orcaflex-network-dev