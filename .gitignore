# DOM POC Files

# ==========================================
# MANDATORY: Root Directory Hygiene
# ==========================================
# Prevent test files in root
/test_*.py
/*_test.py
/test_*.yml

# Prevent backup files in root
/*.backup*
/*.bak
/*~
/*.old

# Prevent migration files in root
/*migration*
/*upgrade*
/requirements-*.txt

# Prevent temporary files in root
/tmp*
/temp*
/*.tmp
/nul
/coverage.xml
/.command-*
/agos

# Prevent config files in root (except whitelisted)
/*.yml
/*.yaml
!docker-compose.yml
/*.json
!package.json
/*.ini

# Prevent batch files in root (except convenience scripts)
/batch_*.yml
/fsts_*.yml
/*_batch.yml

# Prevent generated files in root
/*.log
/*.pid
/*.cache

# Coverage and test artifacts
htmlcov/
.pytest_cache/
.coverage
coverage.xml
*.cover
.hypothesis/

# Logs
logs/
*.log

# ==========================================

# AQWA files
src\digitalmodel\tests\test_data\aqwa\ef_server\02_S04_HR_EXT_FORCE.LIS
src\digitalmodel\tests\test_data\aqwa\ef_server\02_S04_HR_EXT_FORCE.PLT
src\digitalmodel\tests\test_data\aqwa\ef_server\02_S04_HR_EXT_FORCE.PLD

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# siva adding private workspace 
_dev-private/

# Generated output directories
/output/
/results/


# Agent OS
.agent-os/cache/
.agent-os/temp/
.cross-repo-cache/
.fallback-cache/

# Python
__pycache__/
*.py[cod]
*$py.class
.pytest_cache/
.coverage
htmlcov/

# UV
.venv/

# Auto-added essential patterns
.env.*
*.local
.DS_Store
node_modules/
*.tmp
*.bak
*.swp
.temp/
