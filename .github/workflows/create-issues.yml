name: Create Issues from Files

on:
  push:
    paths: ['issues/new/*.md']

jobs:
  create-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Create GitHub Issue
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Get changed files
            const { data: files } = await github.rest.repos.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });
            
            for (const file of files.files) {
              if (file.filename.startsWith('issues/new/') && file.filename.endsWith('.md')) {
                const content = fs.readFileSync(file.filename, 'utf8');
                
                // Parse frontmatter and content
                const lines = content.split('\n');
                let title = '';
                let body = '';
                let labels = [];
                let assignees = [];
                
                let inFrontmatter = false;
                let bodyStart = 0;
                
                for (let i = 0; i < lines.length; i++) {
                  const line = lines[i].trim();
                  
                  if (line === '---') {
                    if (!inFrontmatter) {
                      inFrontmatter = true;
                    } else {
                      bodyStart = i + 1;
                      break;
                    }
                  } else if (inFrontmatter) {
                    if (line.startsWith('title:')) {
                      title = line.replace('title:', '').trim().replace(/"/g, '');
                    } else if (line.startsWith('labels:')) {
                      labels = line.replace('labels:', '').trim().split(',').map(l => l.trim());
                    } else if (line.startsWith('assignees:')) {
                      assignees = line.replace('assignees:', '').trim().split(',').map(a => a.trim());
                    }
                  }
                }
                
                body = lines.slice(bodyStart).join('\n').trim();
                
                if (title && body) {
                  // Create the issue
                  const issue = await github.rest.issues.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    title: title,
                    body: body,
                    labels: labels.filter(l => l),
                    assignees: assignees.filter(a => a)
                  });
                  
                  console.log(`Created issue #${issue.data.number}: ${title}`);
                  
                  // Move file to processed folder
                  const newPath = file.filename.replace('issues/new/', 'issues/processed/');
                  await github.rest.repos.createOrUpdateFileContents({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    path: newPath,
                    message: `Move processed issue file: ${path.basename(file.filename)}`,
                    content: Buffer.from(content).toString('base64'),
                    sha: file.sha
                  });
                  
                  // Delete original file
                  await github.rest.repos.deleteFile({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    path: file.filename,
                    message: `Remove processed issue file: ${path.basename(file.filename)}`,
                    sha: file.sha
                  });
                }
              }
            }