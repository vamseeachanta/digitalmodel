# Test Automation Agent Propagation Configuration
# This file defines how the test automation agent should be deployed across repositories

agent:
  name: test-automation-enhanced
  version: 1.0.0
  description: Enhanced cross-repository test automation with AI-powered analysis
  author: Agent OS
  
propagation:
  # Define which files to propagate
  files:
    - source: .agent-os/commands/test-automation-enhanced.py
      destination: .agent-os/commands/test-automation-enhanced.py
      executable: true
      
    - source: .agent-os/commands/test-automation-propagation.yml
      destination: .agent-os/commands/test-automation-propagation.yml
      
  # Repository-specific configurations
  repository_configs:
    python:
      test_paths:
        - tests/
        - test/
        - spec/
      test_pattern: "test_*.py"
      runner: pytest
      coverage_tool: pytest-cov
      dependencies:
        - pytest>=7.0.0
        - pytest-cov>=3.0.0
        - pytest-parallel
        
    javascript:
      test_paths:
        - test/
        - tests/
        - spec/
        - __tests__/
      test_pattern: "*.test.js"
      runner: npm test
      coverage_tool: jest --coverage
      dependencies:
        - jest
        - jest-coverage
        
    generic:
      test_paths:
        - tests/
        - test/
        - spec/
      test_pattern: "*test*"
      runner: auto-detect
      coverage_tool: auto-detect
      
  # Deployment instructions
  deployment:
    pre_install:
      - description: Check for existing test configuration
        command: |
          if [ -f ".test-automation.yml" ]; then
            echo "Backing up existing configuration..."
            cp .test-automation.yml .test-automation.yml.backup
          fi
          
    post_install:
      - description: Initialize test automation database
        command: |
          mkdir -p .test_automation
          touch .test_automation/learned_patterns.db
          
      - description: Run initial health check
        command: |
          python .agent-os/commands/test-automation-enhanced.py health-check
          
      - description: Create initial baseline
        command: |
          python .agent-os/commands/test-automation-enhanced.py run-all --format json > .test_automation/baseline.json
          
  # Integration points
  integrations:
    ci_cd:
      github_actions:
        workflow_template: |
          name: Test Automation
          on: [push, pull_request]
          jobs:
            test:
              runs-on: ubuntu-latest
              steps:
                - uses: actions/checkout@v3
                - name: Setup Python
                  uses: actions/setup-python@v4
                  with:
                    python-version: '3.11'
                - name: Install dependencies
                  run: |
                    pip install -r requirements.txt
                    pip install pytest pytest-cov
                - name: Run Test Automation
                  run: |
                    python .agent-os/commands/test-automation-enhanced.py run-all \
                      --parallel --coverage --auto-fix --format html
                - name: Upload Report
                  uses: actions/upload-artifact@v3
                  with:
                    name: test-report
                    path: test_reports/
                    
      gitlab_ci:
        pipeline_template: |
          test-automation:
            stage: test
            script:
              - python .agent-os/commands/test-automation-enhanced.py run-all --parallel --coverage
            artifacts:
              paths:
                - test_reports/
              expire_in: 1 week
              
    pre_commit:
      hooks:
        - id: test-automation-check
          name: Test Automation Check
          entry: python .agent-os/commands/test-automation-enhanced.py
          language: python
          pass_filenames: false
          args: ['run-module', '--auto-fix']
          
# Slash command registration
slash_command:
  command: /test-automation-enhanced
  aliases:
    - /test-auto
    - /ta
  description: Enhanced test automation with AI-powered analysis and AAA pattern enforcement
  
  subcommands:
    - name: run-all
      description: Run all tests with comprehensive analysis
      options:
        - --parallel: Run tests in parallel (default)
        - --coverage: Generate coverage reports
        - --auto-fix: Automatically fix resolvable issues
        - --format: Report format (html/json/markdown)
        - --check-aaa: Validate AAA pattern compliance
        
    - name: run-module
      description: Run tests for specific module
      arguments:
        - module_name: Name of the module to test
      options:
        - --verbose: Show detailed output
        - --coverage: Generate coverage report
        
    - name: analyze
      description: Analyze test failures and suggest fixes
      options:
        - --auto-fix: Apply fixes automatically
        - --dry-run: Show what would be fixed
        
    - name: health-check
      description: Check test infrastructure health
      
    - name: report
      description: Generate comprehensive test report
      options:
        - --format: Output format (html/json/markdown)
        - --include-trends: Include historical trends
        - --coverage-gaps: Include coverage gap analysis
        
    - name: validate-pattern
      description: Validate tests follow Arrange-Act-Assert pattern
      options:
        - --file: Specific file or directory to validate
        - --pattern: Pattern to check (default aaa)
      note: All tests should use AAA pattern with clear section comments
        
    - name: generate-test
      description: Generate AAA-compliant tests for source files
      arguments:
        - --file: Source file to generate tests for
      options:
        - --output: Output directory for generated tests
        - --pattern: Test pattern to use (default aaa)
      note: Tests for functions producing output include artifact verification
        
    - name: fix-patterns
      description: Auto-fix tests to comply with AAA pattern
      options:
        - --file: Specific file or directory to fix
        - --dry-run: Show what would be changed without making changes
      note: Creates backups before modifying test files
        
# Success metrics for tracking
metrics:
  targets:
    - pass_rate: 80
      description: Minimum test pass rate
      
    - coverage: 70
      description: Minimum code coverage percentage
      
    - auto_fix_rate: 60
      description: Percentage of failures auto-fixed
      
    - execution_time: 300
      description: Maximum test suite execution time (seconds)
      
  tracking:
    - metric: pass_rate
      frequency: per_commit
      alert_threshold: 70
      
    - metric: coverage
      frequency: daily
      alert_threshold: 65
      
    - metric: auto_fix_success
      frequency: weekly
      alert_threshold: 50